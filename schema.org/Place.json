{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schema.org/Place.json",
  "$comment": "Autogenerated with schema-org-gen",
  "title": "Place",
  "description": "Entities that have a somewhat fixed, physical extension.",
  "media": {
    "type": "application/json;profile=https://schema.org/Place"
  },
  "allOf": [
    {
      "$ref": "Thing.json"
    }
  ],
  "type": "object",
  "properties": {
    "additionalProperty": {
      "$ref": "PropertyValue.json#/$defs/possibleRefArray"
    },
    "address": {
      "$ref": "#/$defs/address"
    },
    "aggregateRating": {
      "$ref": "AggregateRating.json#/$defs/possibleRef"
    },
    "amenityFeature": {
      "$ref": "LocationFeatureSpecification.json#/$defs/possibleRefArray"
    },
    "branchCode": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/branchCode"
      }
    },
    "containedInPlace": {
      "$ref": "Place.json#/$defs/possibleRef"
    },
    "containsPlace": {
      "$ref": "Place.json#/$defs/possibleRef"
    },
    "event": {
      "$ref": "Event.json#/$defs/possibleRefArray"
    },
    "faxNumber": {
      "$ref": "#/$defs/faxNumber"
    },
    "geo": {
      "$ref": "#/$defs/geo"
    },
    "geospatiallyContains": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyContains"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyContains"
          }
        }
      ]
    },
    "geospatiallyCoveredBy": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyCoveredBy"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyCoveredBy"
          }
        }
      ]
    },
    "geospatiallyCovers": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyCovers"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyCovers"
          }
        }
      ]
    },
    "geospatiallyCrosses": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyCrosses"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyCrosses"
          }
        }
      ]
    },
    "geospatiallyDisjoint": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyDisjoint"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyDisjoint"
          }
        }
      ]
    },
    "geospatiallyEquals": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyEquals"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyEquals"
          }
        }
      ]
    },
    "geospatiallyIntersects": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyIntersects"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyIntersects"
          }
        }
      ]
    },
    "geospatiallyOverlaps": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyOverlaps"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyOverlaps"
          }
        }
      ]
    },
    "geospatiallyTouches": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyTouches"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyTouches"
          }
        }
      ]
    },
    "geospatiallyWithin": {
      "oneOf": [
        {
          "$ref": "#/$defs/geospatiallyWithin"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/geospatiallyWithin"
          }
        }
      ]
    },
    "globalLocationNumber": {
      "$ref": "#/$defs/globalLocationNumber"
    },
    "hasMap": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/hasMap"
      }
    },
    "isAccessibleForFree": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/isAccessibleForFree"
      }
    },
    "isicV4": {
      "$ref": "#/$defs/isicV4"
    },
    "logo": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/logo"
      }
    },
    "maximumAttendeeCapacity": {
      "$ref": "#/$defs/maximumAttendeeCapacity"
    },
    "openingHoursSpecification": {
      "$ref": "OpeningHoursSpecification.json#/$defs/possibleRef"
    },
    "photo": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/photo"
      }
    },
    "publicAccess": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/publicAccess"
      }
    },
    "review": {
      "$ref": "Review.json#/$defs/possibleRefArray"
    },
    "smokingAllowed": {
      "oneOf": [
        {
          "$ref": "#/$defs/smokingAllowed"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/smokingAllowed"
          }
        }
      ]
    },
    "specialOpeningHoursSpecification": {
      "$ref": "OpeningHoursSpecification.json#/$defs/possibleRef"
    },
    "telephone": {
      "$ref": "#/$defs/telephone"
    }
  },
  "$defs": {
    "arrayOfPlaces": {
      "type": "array",
      "items": {
        "$ref": "#"
      }
    },
    "possibleRef": {
      "oneOf": [
        {
          "$ref": "#"
        },
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        }
      ]
    },
    "possibleRefArray": {
      "oneOf": [
        {
          "type": "string",
          "format": "uri",
          "links": [
            {
              "rel": "full",
              "href": "{+$}"
            }
          ]
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/possibleRef"
          }
        }
      ]
    },
    "address": {
      "title": "Address",
      "description": "Physical address of the item.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "PostalAddress.json#/$defs/possibleRef"
        }
      ]
    },
    "branchCode": {
      "title": "Branch Code",
      "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.",
      "type": "string"
    },
    "faxNumber": {
      "title": "Fax Number",
      "description": "The fax number.",
      "type": "string"
    },
    "geo": {
      "title": "Geo",
      "description": "The geo coordinates of the place.",
      "anyOf": [
        {
          "$ref": "GeoCoordinates.json#/$defs/possibleRef"
        },
        {
          "$ref": "GeoShape.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyContains": {
      "title": "Geospatially Contains",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyCoveredBy": {
      "title": "Geospatially Covered by",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyCovers": {
      "title": "Geospatially Covers",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyCrosses": {
      "title": "Geospatially Crosses",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyDisjoint": {
      "title": "Geospatially Disjoint",
      "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries.\" (a symmetric relationship, as defined in DE-9IM)",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyEquals": {
      "title": "Geospatially Equals",
      "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in DE-9IM. \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship)",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyIntersects": {
      "title": "Geospatially Intersects",
      "description": "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyOverlaps": {
      "title": "Geospatially Overlaps",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyTouches": {
      "title": "Geospatially Touches",
      "description": "Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points.\" (a symmetric relationship, as defined in DE-9IM )",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "geospatiallyWithin": {
      "title": "Geospatially Within",
      "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in DE-9IM.",
      "anyOf": [
        {
          "$ref": "GeospatialGeometry.json#/$defs/possibleRef"
        },
        {
          "$ref": "Place.json#/$defs/possibleRef"
        }
      ]
    },
    "globalLocationNumber": {
      "title": "Global Location Number",
      "description": "The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
      "type": "string"
    },
    "hasMap": {
      "title": "Has Map",
      "description": "A URL to a map of the place. Supersedes map, maps.",
      "anyOf": [
        {
          "$ref": "Map.json#/$defs/possibleRef"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "isAccessibleForFree": {
      "title": "Is Accessible for Free",
      "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
      "type": "boolean"
    },
    "isicV4": {
      "title": "Isic V4",
      "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
      "type": "string"
    },
    "logo": {
      "title": "Logo",
      "description": "An associated logo.",
      "anyOf": [
        {
          "type": "string",
          "format": "uri"
        },
        {
          "$ref": "ImageObject.json#/$defs/possibleRef"
        }
      ]
    },
    "maximumAttendeeCapacity": {
      "title": "Maximum Attendee Capacity",
      "description": "The total number of individuals that may attend an event or venue.",
      "type": "integer"
    },
    "photo": {
      "title": "Photo",
      "description": "A photograph of this place. Supersedes photos.",
      "anyOf": [
        {
          "$ref": "ImageObject.json#/$defs/possibleRef"
        },
        {
          "$ref": "Photograph.json#/$defs/possibleRef"
        }
      ]
    },
    "publicAccess": {
      "title": "Public Access",
      "description": "A flag to signal that the Place is open to public visitors.  If this property is omitted there is no assumed default boolean value",
      "type": "boolean"
    },
    "smokingAllowed": {
      "title": "Smoking Allowed",
      "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
      "type": "boolean"
    },
    "telephone": {
      "title": "Telephone",
      "description": "The telephone number.",
      "type": "string"
    }
  },
  "enum": [
    "areaServed",
    "availableAtOrFrom",
    "birthPlace",
    "containedInPlace",
    "containsPlace",
    "contentLocation",
    "deathPlace",
    "dropoffLocation",
    "eligibleRegion",
    "exerciseCourse",
    "foodEstablishment",
    "foundingLocation",
    "fromLocation",
    "gameLocation",
    "hasPOS",
    "homeLocation",
    "ineligibleRegion",
    "jobLocation",
    "location",
    "locationCreated",
    "pickupLocation",
    "regionsAllowed",
    "serviceLocation",
    "spatialCoverage",
    "toLocation",
    "workLocation"
  ]
}